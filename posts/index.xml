<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on dqhl</title>
    <link>https://realdqhl.com/posts/</link>
    <description>Recent content in Posts on dqhl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>©2022 dqhl</copyright>
    <lastBuildDate>Sat, 27 Aug 2022 15:50:34 +0800</lastBuildDate><atom:link href="https://realdqhl.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>XMACROByExample</title>
      <link>https://realdqhl.com/posts/xmacrobyexample/</link>
      <pubDate>Sat, 27 Aug 2022 15:50:34 +0800</pubDate>
      
      <guid>https://realdqhl.com/posts/xmacrobyexample/</guid>
      <description>在写南京大学 计算机系统基础 课程实验时，看到代码中大量出现了各种宏定义，了解后得知，这是一些X-MACRO，搜索了相关的知识之后我试图逐个的去将这些宏定义展开，下面的文章我将这个展开的过程记录了下来，并且穿插了一些宏定义的相关知识，所以你可以把这篇文章当作一个X-MACRO By Example
本文的例子来自于这个课程实验的nemu部分，文件所在位置：/nemu/include/macro.h
#define STRLEN(CONST_STR) (sizeof(CONST_STR) - 1) STRLEN()可以给出一个字符串的长度，CONST_STR作为参数传入
#define str_temp(x) #x #define str(x) str_temp(x) When a macro parameter is used with a leading ‘#’, the preprocessor replaces it with the literal text of the actual argument, converted to a string constant. - GCC GNU Online Doc
这里的#在GCC GNU Online Doc中描述如上，可以简单的理解为给这个参数加上了一个&amp;quot;&amp;quot;，类型为字符串常量
#define str_temp(x) #x #define str(x) str_temp(x) ... printf(str(test)); 我们可以使用gcc -E的编译选项将其展开，可以得到如下的结果
printf(&amp;#34;test&amp;#34;); #define ARRLEN(arr) (int)(sizeof(arr) / sizeof(arr[0])) 计算一个数组的长度，简单将其展开即可</description>
    </item>
    
  </channel>
</rss>
